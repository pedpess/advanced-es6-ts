{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","url","fetch","then","_handleErrors","json","data","header","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;kCAEUC,G,EAAK;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACb,aAAOF,GAAP;AACD;;;wBAEGG,G,EAAK;AAAA;;AAEP,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBN,GAAnB,CAAP;AAAA,OADD,EAEJK,IAFI,CAEC;AAAA,eAAOL,IAAIO,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEd,aAAOJ,MAAMD,GAAN,EAAW;AAChBM,gBAAQ;AACN,0BAAgB;AADV,SADQ;AAIhBC,gBAAQ,MAJQ;AAKhBC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AALU,OAAX,EAOJH,IAPI,CAOC;AAAA,eAAO,OAAKC,aAAL,CAAmBN,GAAnB,CAAP;AAAA,OAPD,CAAP;AASD","file":"HttpService.js","sourcesContent":["class HttpService {\n\n  _handleErrors(res) {\n    if (!res.ok) throw new Error('Not possible to load the data');\n    return res;\n  }\n\n  get(url) {\n\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n  }\n\n  post(url, data) {\n\n    return fetch(url, {\n      header: {\n        'Content-type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(data)\n    })\n      .then(res => this._handleErrors(res));\n\n  }\n}\n"]}