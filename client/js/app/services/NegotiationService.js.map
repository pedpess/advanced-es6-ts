{"version":3,"sources":["../../app-es6/services/NegotiationService.js"],"names":["NegotiationService","_httpService","HttpService","Promise","all","getWeekNegotiations","getWeekBeforeNegotiations","getWeekBeforeMoreNegotiations","then","negotiations","periods","reduce","reducedArray","period","concat","catch","Error","error","get","console","log","map","Negotiation","Date","object","date","quantity","value","negotiation","ConnectionFactory","getConnection","NegotiationDao","connection","dao","addNegotiation","listAll","clearAll","currentList","getNegotiations","filter","_negotiationList","some","JSON","stringify","existingNegotiation"],"mappings":"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","file":"NegotiationService.js","sourcesContent":["class NegotiationService {\n\n  constructor() {\n\n    this._httpService = new HttpService();\n  }\n\n  getNegotiations() {\n\n    return Promise.all([\n      this.getWeekNegotiations(),\n      this.getWeekBeforeNegotiations(),\n      this.getWeekBeforeMoreNegotiations()\n    ]).then(periods => {\n\n      let negotiations = periods\n        .reduce((reducedArray, period) => reducedArray.concat(period), []);\n\n      return negotiations;\n\n    })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }\n\n\n  getWeekNegotiations() {\n\n\n\n    return this._httpService\n      .get('negotiations/week')\n      .then(negotiations => {\n        console.log(negotiations);\n        return negotiations.map(object => new Negotiation(new Date(object.date), object.quantity, object.value));\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error('Loading negotiations for the week were not possible');\n      });\n\n\n  }\n\n  getWeekBeforeNegotiations() {\n\n\n\n    return this._httpService\n      .get('negotiations/weekbefore')\n      .then(negotiations => {\n        console.log(negotiations);\n        return negotiations.map(object => new Negotiation(new Date(object.date), object.quantity, object.value));\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error('Loading negotiations for the week before were not possible');\n      });\n\n\n  }\n\n  getWeekBeforeMoreNegotiations() {\n\n\n\n    return this._httpService\n      .get('negotiations/weekbeforemore')\n      .then(negotiations => {\n        console.log(negotiations);\n        return negotiations.map(object => new Negotiation(new Date(object.date), object.quantity, object.value));\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error('Loading negotiations for the week before more were not possible');\n      });\n\n\n  }\n\n  addNegotiation(negotiation) {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegotiationDao(connection))\n      .then(dao => dao.addNegotiation(negotiation))\n      .then(() => 'Negotiation was added.')\n      .catch(() => {\n        console.log(error);\n        throw new Error('Negotiation was not added');\n      });\n  }\n\n  listNegotiations() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegotiationDao(connection))\n      .then(dao => dao.listAll())\n      .catch(error => {\n        console.log(error);\n        throw new Error('Negotiation was not added');\n      });\n\n  }\n\n  delete() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegotiationDao(connection))\n      .then(dao => dao.clearAll())\n      .then(() => 'Negotiations were deleted.')\n      .catch(error => {\n        console.log(error);\n        throw new Error('Negotiations were not deleted.');\n      })\n  }\n\n  import(currentList) {\n\n    return this\n      .getNegotiations()\n      .then(negotiations =>\n        negotiations.filter(negotiation =>\n          !this._negotiationList.negotiations.some(existingNegotiation =>\n            JSON.stringify(negotiation) == JSON.stringify(existingNegotiation))))\n      .catch(error => {\n        console.log(error);\n        throw new Error('Not possible to search for negotiations to be imported');\n      })\n  }\n}\n\n"]}